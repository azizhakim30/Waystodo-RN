{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Box, Button, Input, Text } from \"native-base\";\nimport { useState } from \"react\";\nimport { showMessage } from \"react-native-flash-message\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { API } from \"../../config/Api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Category(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      name: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataCategory = _useState2[0],\n    setDataCategory = _useState2[1];\n  var _useQuery = useQuery(\"categoryCaches\", _asyncToGenerator(function* () {\n      var categoryResponse = yield API.get(\"/Categories\");\n      return categoryResponse.data;\n    })),\n    category = _useQuery.data,\n    categoryRefetch = _useQuery.refetch;\n  function handleChangeText(name, value) {\n    setDataCategory(_objectSpread(_objectSpread({}, dataCategory), {}, _defineProperty({}, name, value)));\n  }\n  var categoryColor = [{\n    index: 0,\n    bgColor: \"#155263\"\n  }, {\n    index: 1,\n    bgColor: \"#FF6F3C\"\n  }, {\n    index: 2,\n    bgColor: \"#FF9A3C\"\n  }, {\n    index: 3,\n    bgColor: \"#FFC93C\"\n  }, {\n    index: 4,\n    bgColor: \"danger.500\"\n  }];\n  var handleSubmit = useMutation(function () {\n    var _ref3 = _asyncToGenerator(function* (e) {\n      e.preventDefault();\n      try {\n        if (dataCategory.name.trim() == \"\") {\n          return showMessage({\n            message: \"Category name must be filled!\",\n            type: \"danger\"\n          });\n        }\n        var response = yield API.post(\"/Categories\", dataCategory);\n        showMessage({\n          message: \"Category success added!\",\n          type: \"success\"\n        });\n        setDataCategory({\n          name: \"\"\n        });\n        categoryRefetch();\n      } catch (err) {\n        showMessage({\n          message: \"failed add category!\",\n          type: \"danger\"\n        });\n      }\n    });\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  return _jsx(Box, {\n    display: \"flex\",\n    flex: 1,\n    px: 3,\n    py: 5,\n    w: \"100%\",\n    alignItems: \"center\",\n    children: _jsxs(Box, {\n      display: \"flex\",\n      w: \"90%\",\n      mt: 5,\n      children: [_jsx(Text, {\n        fontSize: \"2xl\",\n        fontWeight: 800,\n        children: \"Add Category\"\n      }), _jsxs(Box, {\n        display: \"flex\",\n        w: \"100%\",\n        mt: 5,\n        children: [_jsx(Input, {\n          placeholder: \"Name\",\n          p: 3,\n          h: 47,\n          bg: \"muted.200\",\n          borderRadius: 8,\n          borderWidth: 2,\n          borderColor: \"muted.400\",\n          mb: 5,\n          w: \"100%\",\n          name: \"name\",\n          type: \"text\",\n          value: dataCategory.name,\n          onChangeText: function onChangeText(value) {\n            return handleChangeText(\"name\", value);\n          }\n        }), _jsx(Button, {\n          backgroundColor: \"#FF5555\",\n          py: 3,\n          _text: {\n            fontWeight: \"bold\"\n          },\n          onPress: function onPress(e) {\n            return handleSubmit.mutate(e);\n          },\n          children: \"Add Category\"\n        })]\n      }), _jsx(Text, {\n        fontSize: \"2xl\",\n        fontWeight: 800,\n        mt: 10,\n        children: \"List Category\"\n      }), _jsx(Box, {\n        mt: 5,\n        display: \"flex\",\n        flexDirection: \"row\",\n        flex: 1,\n        w: \"100%\",\n        flexWrap: \"wrap\",\n        children: category == null ? void 0 : category.map(function (item, i) {\n          return _jsx(Box, {\n            borderRadius: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            mr: 2,\n            my: 2,\n            h: \"8\",\n            px: \"3\",\n            bg: categoryColor == null ? void 0 : categoryColor.find(function (item) {\n              return (item == null ? void 0 : item.index) === i % categoryColor.length;\n            }).bgColor,\n            children: _jsx(Text, {\n              color: \"white\",\n              fontSize: 16,\n              children: item.name\n            })\n          }, i);\n        })\n      })]\n    })\n  });\n}\nexport default Category;","map":{"version":3,"names":["Box","Button","Input","Text","useState","showMessage","useMutation","useQuery","API","Category","navigation","name","dataCategory","setDataCategory","categoryResponse","get","data","category","categoryRefetch","refetch","handleChangeText","value","categoryColor","index","bgColor","handleSubmit","e","preventDefault","trim","message","type","response","post","err","fontWeight","mutate","map","item","i","find","length"],"sources":["/home/aziz/Desktop/mobile/src/components/screen/Categories.js"],"sourcesContent":["import { Box, Button, Input, Text } from \"native-base\"\nimport { useState } from \"react\"\nimport { showMessage } from \"react-native-flash-message\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { API } from \"../../config/Api\"\n\nfunction Category({ navigation }) {\n  const [dataCategory, setDataCategory] = useState({\n    name: \"\",\n  })\n\n  let { data: category, refetch: categoryRefetch } = useQuery(\n    \"categoryCaches\",\n    async () => {\n      let categoryResponse = await API.get(\"/Categories\")\n      return categoryResponse.data\n    }\n  )\n\n  function handleChangeText(name, value) {\n    setDataCategory({\n      ...dataCategory,\n      [name]: value,\n    })\n  }\n\n  const categoryColor = [\n    {\n      index: 0,\n      bgColor: \"#155263\",\n    },\n    {\n      index: 1,\n      bgColor: \"#FF6F3C\",\n    },\n    {\n      index: 2,\n      bgColor: \"#FF9A3C\",\n    },\n    {\n      index: 3,\n      bgColor: \"#FFC93C\",\n    },\n    {\n      index: 4,\n      bgColor: \"danger.500\",\n    },\n  ]\n\n  const handleSubmit = useMutation(async (e) => {\n    e.preventDefault()\n    try {\n      if (dataCategory.name.trim() == \"\") {\n        return showMessage({\n          message: \"Category name must be filled!\",\n          type: \"danger\",\n        })\n      }\n      const response = await API.post(\"/Categories\", dataCategory)\n      // console.log(response.data);\n      showMessage({\n        message: \"Category success added!\",\n        type: \"success\",\n      })\n      setDataCategory({\n        name: \"\",\n      })\n      categoryRefetch()\n    } catch (err) {\n      showMessage({\n        message: \"failed add category!\",\n        type: \"danger\",\n      })\n    }\n  })\n\n  return (\n    <Box display=\"flex\" flex={1} px={3} py={5} w={\"100%\"} alignItems=\"center\">\n      <Box display=\"flex\" w={\"90%\"} mt={5}>\n        <Text fontSize=\"2xl\" fontWeight={800}>\n          Add Category\n        </Text>\n        <Box display=\"flex\" w={\"100%\"} mt={5}>\n          <Input\n            placeholder=\"Name\"\n            p={3}\n            h={47}\n            bg=\"muted.200\"\n            borderRadius={8}\n            borderWidth={2}\n            borderColor=\"muted.400\"\n            mb={5}\n            w=\"100%\"\n            name=\"name\"\n            type=\"text\"\n            value={dataCategory.name}\n            onChangeText={(value) => handleChangeText(\"name\", value)}\n          />\n          <Button\n            backgroundColor=\"#FF5555\"\n            py={3}\n            _text={{\n              fontWeight: \"bold\",\n            }}\n            onPress={(e) => handleSubmit.mutate(e)}\n          >\n            Add Category\n          </Button>\n        </Box>\n        <Text fontSize=\"2xl\" fontWeight={800} mt={10}>\n          List Category\n        </Text>\n\n        <Box\n          mt={5}\n          display=\"flex\"\n          flexDirection=\"row\"\n          flex={1}\n          w={\"100%\"}\n          flexWrap={\"wrap\"}\n        >\n          {category?.map((item, i) => {\n            return (\n              <Box\n                borderRadius={10}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                key={i}\n                mr={2}\n                my={2}\n                h=\"8\"\n                px=\"3\"\n                // take from category color\n                // object keys taking from lenght then - 1 for modulus keep on 4, so loop to base index again\n                bg={\n                  categoryColor?.find(\n                    (item) => item?.index === i % categoryColor.length\n                  ).bgColor\n                }\n              >\n                <Text color=\"white\" fontSize={16}>\n                  {/* find same id category  then return name */}\n                  {item.name}\n                </Text>\n              </Box>\n            )\n          })}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Category\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}