{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { View, Text, VStack, Image, HStack, FlatList, Box, Input, Stack, Pressable, Select, CheckIcon, Menu, Button } from \"native-base\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { showMessage } from \"react-native-flash-message\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API } from \"../../config/Api\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar List = function List(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(new Date()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    date = _React$useState2[0],\n    setDate = _React$useState2[1];\n  var _React$useState3 = React.useState(\"date\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    mode = _React$useState4[0],\n    setMode = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    show = _React$useState6[0],\n    setShow = _React$useState6[1];\n  var _React$useState7 = React.useState(\"Choose Date\"),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    text = _React$useState8[0],\n    setText = _React$useState8[1];\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    shouldOverlapWithTrigger = _React$useState10[0];\n  var _React$useContext = React.useContext(UserContext),\n    _React$useContext2 = _slicedToArray(_React$useContext, 2),\n    state = _React$useContext2[0],\n    dispatch = _React$useContext2[1];\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    var tempDate = new Date(currentDate);\n    var fDate = tempDate.getDate() + \"/\" + (tempDate.getMonth() + 1) + \"/\" + tempDate.getFullYear();\n    setText(fDate);\n  };\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n  var _React$useState11 = React.useState({\n      user_name: null\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    userName = _React$useState12[0],\n    setUserName = _React$useState12[1];\n  var handleOnChange = function handleOnChange(name, value) {\n    setList(_objectSpread(_objectSpread({}, list), {}, _defineProperty({}, name, value)));\n  };\n  var getUserName = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var user_name = yield AsyncStorage.getItem(\"user_name\");\n        setUserName({\n          user_name: user_name\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function getUserName() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var _React$useState13 = React.useState({\n      user_id: null\n    }),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    category = _React$useState14[0],\n    setCategory = _React$useState14[1];\n  var _React$useState15 = React.useState([]),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    dataCategory = _React$useState16[0],\n    setDataCategory = _React$useState16[1];\n  var findUserCategories = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem(\"token\");\n        var user_id = yield AsyncStorage.getItem(\"user_id\");\n        setCategory({\n          user_id: user_id\n        });\n        if (token === null) {\n          navigation.navigate(\"Login\");\n        }\n        var config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + token\n          }\n        };\n        var response = yield API.get(\"/UserCategories?user_id=\" + user_id, config);\n        setDataCategory(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function findUserCategories() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var _React$useState17 = React.useState([]),\n    _React$useState18 = _slicedToArray(_React$useState17, 2),\n    dataList = _React$useState18[0],\n    setDataList = _React$useState18[1];\n  var getLists = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem(\"token\");\n        var user_id = yield AsyncStorage.getItem(\"user_id\");\n        if (!token) {\n          navigation.navigate(\"Login\");\n        }\n        var config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + token\n          }\n        };\n        var response = yield API.get(\"FindLists?user_id=\" + user_id, config);\n        setDataList(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function getLists() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    AsyncStorage.removeItem(\"token\");\n    dispatch({\n      type: \"LOGOUT_SUCCESS\"\n    });\n    showMessage({\n      message: \"Logout success!\",\n      type: \"success\"\n    });\n  };\n  React.useEffect(function () {\n    getUserName();\n    findUserCategories();\n    getLists();\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      p: 7,\n      className: \"top\",\n      style: {\n        flex: 1\n      },\n      children: [_jsxs(HStack, {\n        mb: 3,\n        justifyContent: \"space-between\",\n        children: [_jsxs(VStack, {\n          children: [_jsx(Text, {\n            bold: true,\n            fontSize: \"2xl\",\n            children: \"Hi \" + userName.user_name\n          }), _jsx(Text, {\n            color: \"#FF5555\",\n            children: \"200 Lists\"\n          })]\n        }), _jsx(Box, {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"flex-end\",\n          mx: 2,\n          children: _jsx(Menu, {\n            w: \"160\",\n            shouldOverlapWithTrigger: shouldOverlapWithTrigger,\n            placement: \"bottom right\",\n            trigger: function trigger(triggerProps) {\n              return _jsx(Button, _objectSpread(_objectSpread({\n                variant: \"ghost\"\n              }, triggerProps), {}, {\n                children: _jsx(Image, {\n                  source: {\n                    uri: \"https://res.cloudinary.com/dw5o96n4e/image/upload/v1671763211/Waysbuck/htjnqwgdfdnzktbibwjs.png\"\n                  },\n                  w: 50,\n                  h: 50,\n                  borderRadius: 100,\n                  borderWidth: \"2px\",\n                  borderColor: \"error.500\",\n                  alt: \"DefaultProfile\"\n                })\n              }));\n            },\n            children: _jsx(Menu.Item, {\n              onPress: handleLogout,\n              children: \"Logout\"\n            })\n          })\n        })]\n      }), _jsxs(Stack, {\n        children: [_jsx(Input, {\n          bg: \"blueGray.200\",\n          borderRadius: 8,\n          borderWidth: 2,\n          borderColor: \"blueGray.400\",\n          mb: 2,\n          placeholder: \"Search List...\"\n        }), _jsxs(HStack, {\n          justifyContent: \"space-between\",\n          space: 2,\n          children: [_jsx(Pressable, {\n            px: 1,\n            py: 3,\n            title: \"DatePicker\",\n            onPress: function onPress() {\n              return showMode(\"date\");\n            },\n            bg: \"blueGray.200\",\n            borderRadius: 8,\n            borderWidth: 2,\n            borderColor: \"blueGray.400\",\n            mb: \"3\",\n            w: \"100px\",\n            children: _jsxs(HStack, {\n              justifyContent: \"space-between\",\n              children: [_jsx(Text, {\n                fontSize: \"xs\",\n                color: \"blueGray.400\",\n                children: text\n              }), _jsx(Text, {\n                color: \"blueGray.400\",\n                children: _jsx(Ionicons, {\n                  name: \"calendar-outline\"\n                })\n              })]\n            })\n          }), _jsx(Select, {\n            bg: \"blueGray.200\",\n            borderRadius: 8,\n            borderWidth: 2,\n            borderColor: \"blueGray.400\",\n            mb: \"5px\",\n            w: \"120px\",\n            placeholder: \"Category\",\n            accessibilityLabel: \"Categories\",\n            _selectedItem: {\n              bg: \"teal.600\",\n              endIcon: _jsx(CheckIcon, {\n                size: 5\n              })\n            },\n            children: dataCategory == null ? void 0 : dataCategory.map(function (item, index) {\n              return _jsx(Select.Item, {\n                label: item == null ? void 0 : item.name,\n                value: item.name\n              }, index);\n            })\n          }), _jsxs(Select, {\n            w: \"100px\",\n            bg: \"blueGray.200\",\n            borderRadius: 8,\n            borderWidth: 2,\n            borderColor: \"blueGray.400\",\n            mb: \"5px\",\n            placeholder: \"Status\",\n            accessibilityLabel: \"Status\",\n            _selectedItem: {\n              bg: \"teal.600\",\n              endIcon: _jsx(CheckIcon, {\n                size: 5\n              })\n            },\n            children: [_jsx(Select.Item, {\n              label: \"Todo\",\n              value: \"todo\"\n            }), _jsx(Select.Item, {\n              label: \"Done\",\n              value: \"done\"\n            })]\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      p: 6,\n      className: \"bottom\",\n      style: {\n        flex: 3\n      },\n      children: [_jsx(FlatList, {\n        data: dataList,\n        renderItem: function renderItem(itemData) {\n          return _jsx(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Detail\", {\n                itemData: itemData\n              });\n            },\n            children: _jsx(Box, {\n              borderRadius: 5,\n              bg: \"lightBlue.100\",\n              m: 2,\n              p: 3,\n              children: _jsxs(HStack, {\n                justifyContent: \"space-between\",\n                children: [_jsxs(View, {\n                  children: [_jsx(HStack, {\n                    children: itemData.item.status === \"done\" ? _jsxs(_Fragment, {\n                      children: [_jsx(Text, {\n                        style: {\n                          textDecorationLine: \"line-through\",\n                          textDecorationStyle: \"solid\"\n                        },\n                        bold: true,\n                        children: itemData.item.category\n                      }), _jsxs(Text, {\n                        style: {\n                          textDecorationLine: \"line-through\",\n                          textDecorationStyle: \"solid\"\n                        },\n                        bold: true,\n                        children: [\" \", \"-\", \" \"]\n                      }), _jsx(Text, {\n                        style: {\n                          textDecorationLine: \"line-through\",\n                          textDecorationStyle: \"solid\"\n                        },\n                        bold: true,\n                        children: itemData.item.name\n                      })]\n                    }) : _jsxs(_Fragment, {\n                      children: [_jsx(Text, {\n                        bold: true,\n                        children: itemData.item.category\n                      }), _jsx(Text, {\n                        bold: true,\n                        children: \" - \"\n                      }), _jsx(Text, {\n                        bold: true,\n                        children: itemData.item.name\n                      })]\n                    })\n                  }), itemData.item.status === \"done\" ? _jsx(Text, {\n                    w: 200,\n                    mb: 5,\n                    style: {\n                      textDecorationLine: \"line-through\",\n                      textDecorationStyle: \"solid\"\n                    },\n                    color: \"coolGray.400\",\n                    children: itemData.item.desc\n                  }) : _jsx(Text, {\n                    w: 200,\n                    mb: 5,\n                    color: \"coolGray.400\",\n                    children: itemData.item.desc\n                  }), _jsxs(Text, {\n                    color: \"coolGray.400\",\n                    children: [_jsx(Ionicons, {\n                      name: \"calendar-outline\"\n                    }), \" \", itemData.item.date]\n                  })]\n                }), _jsxs(View, {\n                  alignItems: \"center\",\n                  children: [_jsx(Pressable, {\n                    children: _jsx(Text, {\n                      bg: \"danger.100\",\n                      w: \"100px\",\n                      fontSize: \"xs\",\n                      borderRadius: 8,\n                      color: \"#fff\",\n                      bold: true,\n                      textAlign: \"center\",\n                      mb: 2,\n                      p: 1,\n                      children: itemData.item.category\n                    })\n                  }), itemData.item.status === \"done\" ? _jsx(Image, {\n                    alt: \"status\",\n                    source: {\n                      uri: done\n                    },\n                    width: \"60px\",\n                    height: \"60px\"\n                  }) : _jsx(Image, {\n                    alt: \"status\",\n                    source: {\n                      uri: todo\n                    },\n                    width: \"60px\",\n                    height: \"60px\"\n                  })]\n                })]\n              })\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return item._id;\n        }\n      }), show && _jsx(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        value: date,\n        mode: mode,\n        is24Hours: true,\n        display: \"default\",\n        onChange: onChangeDate\n      })]\n    })]\n  });\n};\nexport default List;","map":{"version":3,"names":["React","View","Text","VStack","Image","HStack","FlatList","Box","Input","Stack","Pressable","Select","CheckIcon","Menu","Button","Ionicons","DateTimePicker","showMessage","AsyncStorage","API","UserContext","List","navigation","useState","Date","date","setDate","mode","setMode","show","setShow","text","setText","shouldOverlapWithTrigger","useContext","state","dispatch","onChangeDate","event","selectedDate","currentDate","tempDate","fDate","getDate","getMonth","getFullYear","showMode","currentMode","user_name","userName","setUserName","handleOnChange","name","value","setList","list","getUserName","getItem","error","console","log","user_id","category","setCategory","dataCategory","setDataCategory","findUserCategories","token","navigate","config","headers","Authorization","response","get","data","err","dataList","setDataList","getLists","handleLogout","removeItem","type","message","useEffect","flex","triggerProps","uri","bg","endIcon","map","item","index","itemData","status","textDecorationLine","textDecorationStyle","desc","done","todo","_id"],"sources":["/home/aziz/Desktop/mobile/src/components/screen/List.js"],"sourcesContent":["import React from \"react\"\nimport {\n  View,\n  Text,\n  VStack,\n  Image,\n  HStack,\n  FlatList,\n  Box,\n  Input,\n  Stack,\n  Pressable,\n  Select,\n  CheckIcon,\n  Menu,\n  Button,\n} from \"native-base\"\nimport { Ionicons } from \"@expo/vector-icons\"\nimport DateTimePicker from \"@react-native-community/datetimepicker\"\nimport { showMessage } from \"react-native-flash-message\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { API } from \"../../config/Api\"\nimport { UserContext } from \"../../context/UserContext\"\n\nconst List = ({ navigation }) => {\n  const [date, setDate] = React.useState(new Date())\n  const [mode, setMode] = React.useState(\"date\")\n  const [show, setShow] = React.useState(false)\n  const [text, setText] = React.useState(\"Choose Date\")\n  const [shouldOverlapWithTrigger] = React.useState(false)\n  const [state, dispatch] = React.useContext(UserContext)\n\n  const onChangeDate = (event, selectedDate) => {\n    const currentDate = selectedDate || date\n    setShow(false)\n    setDate(currentDate)\n\n    let tempDate = new Date(currentDate)\n    let fDate =\n      tempDate.getDate() +\n      \"/\" +\n      (tempDate.getMonth() + 1) +\n      \"/\" +\n      tempDate.getFullYear()\n    setText(fDate)\n  }\n\n  const showMode = (currentMode) => {\n    setShow(true)\n    setMode(currentMode)\n  }\n\n  const [userName, setUserName] = React.useState({ user_name: null })\n\n  const handleOnChange = (name, value) => {\n    setList({\n      ...list,\n      [name]: value,\n    })\n  }\n\n  const getUserName = async () => {\n    try {\n      const user_name = await AsyncStorage.getItem(\"user_name\")\n      setUserName({\n        user_name,\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  const [category, setCategory] = React.useState({ user_id: null })\n  const [dataCategory, setDataCategory] = React.useState([])\n\n  const findUserCategories = async () => {\n    try {\n      const token = await AsyncStorage.getItem(\"token\")\n      const user_id = await AsyncStorage.getItem(\"user_id\")\n      setCategory({\n        user_id,\n      })\n\n      if (token === null) {\n        navigation.navigate(\"Login\")\n      }\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token,\n        },\n      }\n      const response = await API.get(\n        `/UserCategories?user_id=${user_id}`,\n        config\n      )\n      setDataCategory(response.data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const [dataList, setDataList] = React.useState([])\n  const getLists = async () => {\n    try {\n      const token = await AsyncStorage.getItem(\"token\")\n      const user_id = await AsyncStorage.getItem(\"user_id\")\n\n      if (!token) {\n        navigation.navigate(\"Login\")\n      }\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token,\n        },\n      }\n      const response = await API.get(`FindLists?user_id=${user_id}`, config)\n      setDataList(response.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleLogout = () => {\n    AsyncStorage.removeItem(\"token\")\n    dispatch({\n      type: \"LOGOUT_SUCCESS\",\n    })\n    showMessage({\n      message: \"Logout success!\",\n      type: \"success\",\n    })\n  }\n\n  React.useEffect(() => {\n    getUserName()\n    findUserCategories()\n    getLists()\n  }, [])\n  return (\n    <>\n      <View p={7} className=\"top\" style={{ flex: 1 }}>\n        <HStack mb={3} justifyContent=\"space-between\">\n          <VStack>\n            <Text bold fontSize=\"2xl\">{`Hi ${userName.user_name}`}</Text>\n            <Text color=\"#FF5555\">200 Lists</Text>\n          </VStack>\n          <Box flex={1} justifyContent=\"center\" alignItems=\"flex-end\" mx={2}>\n            <Menu\n              w=\"160\"\n              shouldOverlapWithTrigger={shouldOverlapWithTrigger}\n              placement={\"bottom right\"}\n              trigger={(triggerProps) => {\n                return (\n                  <Button variant=\"ghost\" {...triggerProps}>\n                    <Image\n                      source={{\n                        uri: \"https://res.cloudinary.com/dw5o96n4e/image/upload/v1671763211/Waysbuck/htjnqwgdfdnzktbibwjs.png\",\n                      }}\n                      w={50}\n                      h={50}\n                      borderRadius={100}\n                      borderWidth=\"2px\"\n                      borderColor=\"error.500\"\n                      alt=\"DefaultProfile\"\n                    />\n                  </Button>\n                )\n              }}\n            >\n              <Menu.Item onPress={handleLogout}>Logout</Menu.Item>\n            </Menu>\n          </Box>\n        </HStack>\n        <Stack>\n          <Input\n            bg=\"blueGray.200\"\n            borderRadius={8}\n            borderWidth={2}\n            borderColor=\"blueGray.400\"\n            mb={2}\n            placeholder=\"Search List...\"\n          />\n          <HStack justifyContent=\"space-between\" space={2}>\n            <Pressable\n              px={1}\n              py={3}\n              title=\"DatePicker\"\n              onPress={() => showMode(\"date\")}\n              bg=\"blueGray.200\"\n              borderRadius={8}\n              borderWidth={2}\n              borderColor=\"blueGray.400\"\n              mb=\"3\"\n              w=\"100px\"\n            >\n              <HStack justifyContent=\"space-between\">\n                <Text fontSize=\"xs\" color=\"blueGray.400\">\n                  {text}\n                </Text>\n                <Text color=\"blueGray.400\">\n                  <Ionicons name=\"calendar-outline\" />\n                </Text>\n              </HStack>\n            </Pressable>\n            <Select\n              bg=\"blueGray.200\"\n              borderRadius={8}\n              borderWidth={2}\n              borderColor=\"blueGray.400\"\n              mb=\"5px\"\n              w=\"120px\"\n              placeholder=\"Category\"\n              accessibilityLabel=\"Categories\"\n              _selectedItem={{\n                bg: \"teal.600\",\n                endIcon: <CheckIcon size={5} />,\n              }}\n            >\n              {dataCategory?.map((item, index) => (\n                <Select.Item key={index} label={item?.name} value={item.name} />\n              ))}\n            </Select>\n            <Select\n              w=\"100px\"\n              bg=\"blueGray.200\"\n              borderRadius={8}\n              borderWidth={2}\n              borderColor=\"blueGray.400\"\n              mb=\"5px\"\n              placeholder=\"Status\"\n              accessibilityLabel=\"Status\"\n              _selectedItem={{\n                bg: \"teal.600\",\n                endIcon: <CheckIcon size={5} />,\n              }}\n            >\n              <Select.Item label=\"Todo\" value=\"todo\" />\n              <Select.Item label=\"Done\" value=\"done\" />\n            </Select>\n          </HStack>\n        </Stack>\n      </View>\n      <View p={6} className=\"bottom\" style={{ flex: 3 }}>\n        <FlatList\n          data={dataList}\n          renderItem={(itemData) => {\n            return (\n              <Pressable\n                onPress={() => navigation.navigate(\"Detail\", { itemData })}\n              >\n                <Box borderRadius={5} bg=\"lightBlue.100\" m={2} p={3}>\n                  <HStack justifyContent=\"space-between\">\n                    <View>\n                      <HStack>\n                        {itemData.item.status === \"done\" ? (\n                          <>\n                            <Text\n                              style={{\n                                textDecorationLine: \"line-through\",\n                                textDecorationStyle: \"solid\",\n                              }}\n                              bold\n                            >\n                              {itemData.item.category}\n                            </Text>\n                            <Text\n                              style={{\n                                textDecorationLine: \"line-through\",\n                                textDecorationStyle: \"solid\",\n                              }}\n                              bold\n                            >\n                              {\" \"}\n                              -{\" \"}\n                            </Text>\n                            <Text\n                              style={{\n                                textDecorationLine: \"line-through\",\n                                textDecorationStyle: \"solid\",\n                              }}\n                              bold\n                            >\n                              {itemData.item.name}\n                            </Text>\n                          </>\n                        ) : (\n                          <>\n                            <Text bold>{itemData.item.category}</Text>\n                            <Text bold> - </Text>\n                            <Text bold>{itemData.item.name}</Text>\n                          </>\n                        )}\n                      </HStack>\n                      {itemData.item.status === \"done\" ? (\n                        <Text\n                          w={200}\n                          mb={5}\n                          style={{\n                            textDecorationLine: \"line-through\",\n                            textDecorationStyle: \"solid\",\n                          }}\n                          color=\"coolGray.400\"\n                        >\n                          {itemData.item.desc}\n                        </Text>\n                      ) : (\n                        <Text w={200} mb={5} color=\"coolGray.400\">\n                          {itemData.item.desc}\n                        </Text>\n                      )}\n\n                      <Text color=\"coolGray.400\">\n                        <Ionicons name=\"calendar-outline\" />{\" \"}\n                        {itemData.item.date}\n                      </Text>\n                    </View>\n                    <View alignItems=\"center\">\n                      <Pressable>\n                        <Text\n                          bg=\"danger.100\"\n                          w=\"100px\"\n                          fontSize=\"xs\"\n                          borderRadius={8}\n                          color=\"#fff\"\n                          bold\n                          textAlign=\"center\"\n                          mb={2}\n                          p={1}\n                        >\n                          {itemData.item.category}\n                        </Text>\n                      </Pressable>\n                      {itemData.item.status === \"done\" ? (\n                        <Image\n                          alt=\"status\"\n                          source={{ uri: done }}\n                          width=\"60px\"\n                          height=\"60px\"\n                        />\n                      ) : (\n                        <Image\n                          alt=\"status\"\n                          source={{ uri: todo }}\n                          width=\"60px\"\n                          height=\"60px\"\n                        />\n                      )}\n                    </View>\n                  </HStack>\n                </Box>\n              </Pressable>\n            )\n          }}\n          keyExtractor={(item, index) => {\n            return item._id\n          }}\n        />\n        {show && (\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode={mode}\n            is24Hours={true}\n            display=\"default\"\n            onChange={onChangeDate}\n          />\n        )}\n      </View>\n    </>\n  )\n}\n\nexport default List\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}