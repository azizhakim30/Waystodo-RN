{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { Box, Button, Image, Text } from \"native-base\";\nimport { showMessage } from \"react-native-flash-message\";\nimport { useQuery } from \"react-query\";\nimport ChecklistImage from \"../../../assets/images/checklist.png\";\nimport { API } from \"../../config/Api\";\nimport moment from \"moment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction Detail(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    listId = _route$params.listId,\n    listBgColor = _route$params.listBgColor,\n    categoryBgColor = _route$params.categoryBgColor,\n    categoryName = _route$params.categoryName;\n  var _useQuery = useQuery(\"listDetailCaches\", _asyncToGenerator(function* () {\n      var listResponse = yield API.get(\"/Todo/\" + listId);\n      return listResponse.data;\n    })),\n    list = _useQuery.data,\n    listRefetch = _useQuery.refetch;\n  function handleUpdateIsDone(_x, _x2, _x3) {\n    return _handleUpdateIsDone.apply(this, arguments);\n  }\n  function _handleUpdateIsDone() {\n    _handleUpdateIsDone = _asyncToGenerator(function* (e, id_todo, current_status) {\n      e.preventDefault();\n      try {\n        yield API.patch(\"/Todo/\" + id_todo, {\n          is_done: current_status == 0 ? 1 : 0\n        });\n        listRefetch();\n      } catch (err) {\n        showMessage({\n          message: \"Failed to change status todo!\",\n          type: \"danger\"\n        });\n      }\n    });\n    return _handleUpdateIsDone.apply(this, arguments);\n  }\n  return _jsx(Box, {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    bg: \"white\",\n    children: _jsxs(Box, {\n      bg: listBgColor,\n      w: \"90%\",\n      p: 10,\n      borderRadius: 10,\n      display: \"flex\",\n      flexDirection: \"row\",\n      mx: 5,\n      my: 5,\n      children: [_jsxs(Box, {\n        flex: 2,\n        h: 650,\n        children: [_jsx(Text, {\n          fontWeight: \"bold\",\n          fontSize: 20,\n          textDecorationLine: (list == null ? void 0 : list.is_done) == 0 ? \"none\" : \"line-through\",\n          children: list == null ? void 0 : list.name\n        }), _jsx(Text, {\n          mt: 5,\n          color: \"muted.500\",\n          flex: 1,\n          textDecorationLine: (list == null ? void 0 : list.is_done) == 0 ? \"none\" : \"line-through\",\n          children: list == null ? void 0 : list.description\n        }), _jsxs(Text, {\n          color: \"muted.500\",\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [_jsx(FontAwesome, {\n            name: \"calendar\",\n            size: 15,\n            color: \"muted.500\",\n            style: {\n              marginRight: 5\n            }\n          }), moment(list == null ? void 0 : list.date).format(\" DD MMMM YYYY\")]\n        })]\n      }), _jsxs(Box, {\n        flex: 1,\n        children: [_jsx(Box, {\n          p: 1,\n          borderRadius: 10,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          bg: categoryBgColor,\n          children: _jsx(Text, {\n            color: \"white\",\n            fontWeight: \"bold\",\n            children: categoryName\n          })\n        }), _jsx(Button, {\n          bg: \"transparent\",\n          borderRadius: 100,\n          _hover: {\n            backgroundColor: {\n              listBgColor: listBgColor\n            }\n          },\n          _pressed: {\n            backgroundColor: {\n              listBgColor: listBgColor\n            }\n          },\n          onPress: function onPress(e) {\n            return handleUpdateIsDone(e, list == null ? void 0 : list._id, list == null ? void 0 : list.is_done);\n          },\n          children: list != null && list.is_done ? _jsx(Image, {\n            source: ChecklistImage,\n            w: 10,\n            h: 10,\n            resizeMode: \"contain\",\n            alt: \"ChecklistImage\"\n          }) : _jsx(_Fragment, {\n            children: _jsx(Button, {\n              alignContent: \"center\",\n              bg: list != null && list.is_done ? \"white\" : \"muted.200\",\n              borderRadius: 100,\n              borderWidth: 0,\n              _hover: {\n                backgroundColor: \"muted.300\"\n              },\n              _pressed: {\n                backgroundColor: \"muted.400\"\n              },\n              w: 10,\n              h: 10,\n              onPress: function onPress(e) {\n                return handleUpdateIsDone(e, list == null ? void 0 : list._id, list == null ? void 0 : list.is_done);\n              }\n            })\n          })\n        }), _jsx(Box, {\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        })]\n      })]\n    })\n  });\n}\nexport default Detail;","map":{"version":3,"names":["FontAwesome","Box","Button","Image","Text","showMessage","useQuery","ChecklistImage","API","moment","Detail","route","navigation","params","listId","listBgColor","categoryBgColor","categoryName","listResponse","get","data","list","listRefetch","refetch","handleUpdateIsDone","e","id_todo","current_status","preventDefault","patch","is_done","err","message","type","name","description","marginRight","date","format","backgroundColor","_id"],"sources":["/home/aziz/Desktop/mobile/src/components/screen/Detail.js"],"sourcesContent":["import { FontAwesome } from \"@expo/vector-icons\"\nimport { Box, Button, Image, Text } from \"native-base\"\nimport { showMessage } from \"react-native-flash-message\"\nimport { useQuery } from \"react-query\"\nimport ChecklistImage from \"../../../assets/images/checklist.png\"\nimport { API } from \"../../config/Api\"\nimport moment from \"moment\"\n\nfunction Detail({ route, navigation }) {\n  let { listId, listBgColor, categoryBgColor, categoryName } = route.params\n\n  let { data: list, refetch: listRefetch } = useQuery(\n    \"listDetailCaches\",\n    async () => {\n      let listResponse = await API.get(`/Todo/${listId}`)\n      return listResponse.data\n    }\n  )\n\n  async function handleUpdateIsDone(e, id_todo, current_status) {\n    e.preventDefault()\n    try {\n      await API.patch(`/Todo/${id_todo}`, {\n        is_done: current_status == 0 ? 1 : 0,\n      })\n      listRefetch()\n    } catch (err) {\n      showMessage({\n        message: \"Failed to change status todo!\",\n        type: \"danger\",\n      })\n    }\n  }\n\n  return (\n    <Box display=\"flex\" flex={1} alignItems=\"center\" bg=\"white\">\n      <Box\n        bg={listBgColor}\n        w={\"90%\"}\n        p={10}\n        borderRadius={10}\n        display=\"flex\"\n        flexDirection=\"row\"\n        mx={5}\n        my={5}\n      >\n        <Box flex={2} h={650}>\n          <Text\n            fontWeight=\"bold\"\n            fontSize={20}\n            textDecorationLine={list?.is_done == 0 ? \"none\" : \"line-through\"}\n          >\n            {list?.name}\n          </Text>\n\n          <Text\n            mt={5}\n            color=\"muted.500\"\n            flex={1}\n            textDecorationLine={list?.is_done == 0 ? \"none\" : \"line-through\"}\n          >\n            {list?.description}\n          </Text>\n          <Text color=\"muted.500\" display=\"flex\" alignItems=\"center\">\n            <FontAwesome\n              name=\"calendar\"\n              size={15}\n              color=\"muted.500\"\n              style={{ marginRight: 5 }}\n            />\n            {moment(list?.date).format(\" DD MMMM YYYY\")}\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <Box\n            p={1}\n            borderRadius={10}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            bg={categoryBgColor}\n          >\n            <Text color=\"white\" fontWeight=\"bold\">\n              {categoryName}\n            </Text>\n          </Box>\n          <Button\n            bg=\"transparent\"\n            borderRadius={100}\n            _hover={{ backgroundColor: { listBgColor } }}\n            _pressed={{ backgroundColor: { listBgColor } }}\n            onPress={(e) => handleUpdateIsDone(e, list?._id, list?.is_done)}\n          >\n            {list?.is_done ? (\n              <Image\n                source={ChecklistImage}\n                w={10}\n                h={10}\n                resizeMode=\"contain\"\n                alt=\"ChecklistImage\"\n              />\n            ) : (\n              <>\n                <Button\n                  alignContent=\"center\"\n                  bg={list?.is_done ? \"white\" : \"muted.200\"}\n                  borderRadius={100}\n                  borderWidth={0}\n                  _hover={{ backgroundColor: \"muted.300\" }}\n                  _pressed={{ backgroundColor: \"muted.400\" }}\n                  w={10}\n                  h={10}\n                  onPress={(e) =>\n                    handleUpdateIsDone(e, list?._id, list?.is_done)\n                  }\n                ></Button>\n              </>\n            )}\n          </Button>\n          <Box\n            flex={1}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          ></Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Detail\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}