{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport { useFonts, Sen_400Regular, Sen_700Bold, Sen_800ExtraBold } from \"@expo-google-fonts/sen\";\nimport { UserContextProvider } from \"./src/context/UserContext\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Containers from \"./container\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      Sen_400Regular: Sen_400Regular,\n      Sen_700Bold: Sen_700Bold,\n      Sen_800ExtraBold: Sen_800ExtraBold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var fontConfig = {\n    Sen: {\n      400: {\n        normal: \"Sen_400Regular\"\n      },\n      700: {\n        normal: \"Sen_700Bold\"\n      },\n      800: {\n        normal: \"Sen_800ExtraBold\"\n      }\n    }\n  };\n  var theme = extendTheme({\n    fontConfig: fontConfig,\n    fonts: {\n      heading: \"Sen\",\n      body: \"Sen\",\n      mono: \"Sen\"\n    }\n  });\n  if (!fontsLoaded) {\n    return;\n  } else {\n    var client = new QueryClient();\n    return _jsx(QueryClientProvider, {\n      client: client,\n      children: _jsx(NativeBaseProvider, {\n        theme: theme,\n        children: _jsx(UserContextProvider, {\n          children: _jsx(Containers, {})\n        })\n      })\n    });\n  }\n}","map":{"version":3,"names":["NativeBaseProvider","extendTheme","useFonts","Sen_400Regular","Sen_700Bold","Sen_800ExtraBold","UserContextProvider","NavigationContainer","QueryClient","QueryClientProvider","Containers","App","fontsLoaded","fontConfig","Sen","normal","theme","fonts","heading","body","mono","client"],"sources":["/home/aziz/Desktop/mobile/App.js"],"sourcesContent":["import { NativeBaseProvider, extendTheme } from \"native-base\"\nimport {\n  useFonts,\n  Sen_400Regular,\n  Sen_700Bold,\n  Sen_800ExtraBold,\n} from \"@expo-google-fonts/sen\"\nimport { UserContextProvider } from \"./src/context/UserContext\"\nimport { NavigationContainer } from \"@react-navigation/native\"\n\nimport { QueryClient, QueryClientProvider } from \"react-query\"\n\nimport Containers from \"./container\"\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    Sen_400Regular,\n    Sen_700Bold,\n    Sen_800ExtraBold,\n  })\n\n  const fontConfig = {\n    Sen: {\n      400: {\n        normal: \"Sen_400Regular\",\n      },\n      700: {\n        normal: \"Sen_700Bold\",\n      },\n      800: {\n        normal: \"Sen_800ExtraBold\",\n      },\n    },\n  }\n\n  const theme = extendTheme({\n    fontConfig,\n    fonts: {\n      heading: \"Sen\",\n      body: \"Sen\",\n      mono: \"Sen\",\n    },\n  })\n\n  if (!fontsLoaded) {\n    return\n  } else {\n    const client = new QueryClient()\n\n    return (\n      <QueryClientProvider client={client}>\n        <NativeBaseProvider theme={theme}>\n          <UserContextProvider>\n            <Containers />\n          </UserContextProvider>\n        </NativeBaseProvider>\n      </QueryClientProvider>\n    )\n  }\n}\n"],"mappings":";AAAA,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,aAAa;AAC7D,SACEC,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,gBAAgB,QACX,wBAAwB;AAC/B,SAASC,mBAAmB;AAC5B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,aAAa;AAE9D,OAAOC,UAAU;AAAmB;AAEpC,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAsBT,QAAQ,CAAC;MAC7BC,cAAc,EAAdA,cAAc;MACdC,WAAW,EAAXA,WAAW;MACXC,gBAAgB,EAAhBA;IACF,CAAC,CAAC;IAAA;IAJKO,WAAW;EAMlB,IAAMC,UAAU,GAAG;IACjBC,GAAG,EAAE;MACH,GAAG,EAAE;QACHC,MAAM,EAAE;MACV,CAAC;MACD,GAAG,EAAE;QACHA,MAAM,EAAE;MACV,CAAC;MACD,GAAG,EAAE;QACHA,MAAM,EAAE;MACV;IACF;EACF,CAAC;EAED,IAAMC,KAAK,GAAGf,WAAW,CAAC;IACxBY,UAAU,EAAVA,UAAU;IACVI,KAAK,EAAE;MACLC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACR;EACF,CAAC,CAAC;EAEF,IAAI,CAACR,WAAW,EAAE;IAChB;EACF,CAAC,MAAM;IACL,IAAMS,MAAM,GAAG,IAAIb,WAAW,EAAE;IAEhC,OACE,KAAC,mBAAmB;MAAC,MAAM,EAAEa,MAAO;MAAA,UAClC,KAAC,kBAAkB;QAAC,KAAK,EAAEL,KAAM;QAAA,UAC/B,KAAC,mBAAmB;UAAA,UAClB,KAAC,UAAU;QAAG;MACM;IACH,EACD;EAE1B;AACF"},"metadata":{},"sourceType":"module"}