{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { StatusBar } from \"native-base\";\nimport { MaterialIcons, FontAwesome5, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { UserContext } from \"./src/context/UserContext\";\nimport AddList from \"./src/components/screen/AddList\";\nimport Home from \"./src/components/screen/Home\";\nimport Login from \"./src/components/screen/Login\";\nimport Register from \"./src/components/screen/Register\";\nimport List from \"./src/components/screen/List\";\nimport Categories from \"./src/components/screen/Categories\";\nimport Detail from \"./src/components/screen/Detail\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar ButtonTab = function ButtonTab() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarLabel: function tabBarLabel() {\n          return null;\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          var bgColor;\n          if (route.name == \"List\") {\n            bgColor = focused ? \"#FF5555\" : \"#D9D9D9\";\n            return _jsx(FontAwesome5, {\n              name: \"clipboard-list\",\n              size: 25,\n              color: bgColor\n            });\n          } else if (route.name == \"AddList\") {\n            bgColor = focused ? \"#FF5555\" : \"#D9D9D9\";\n            return _jsx(MaterialCommunityIcons, {\n              name: \"clipboard-plus\",\n              size: 25,\n              color: bgColor\n            });\n          } else if (route.name == \"Categories\") {\n            bgColor = focused ? \"#FF5555\" : \"#D9D9D9\";\n            return _jsx(MaterialIcons, {\n              name: \"category\",\n              size: 25,\n              color: bgColor\n            });\n          }\n        }\n      };\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"List\",\n      component: List\n    }), _jsx(Stack.Screen, {\n      name: \"AddList\",\n      component: AddList\n    }), _jsx(Stack.Screen, {\n      name: \"Categories\",\n      component: Categories\n    })]\n  });\n};\nvar Containers = function Containers() {\n  var _React$useContext = React.useContext(UserContext),\n    _React$useContext2 = _slicedToArray(_React$useContext, 2),\n    state = _React$useContext2[0],\n    dispatch = _React$useContext2[1];\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoading = _React$useState2[0],\n    setIsLoading = _React$useState2[1];\n  var checkAuth = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem(\"token\");\n        if (token) setAuthorization(token);\n        yield API.post(\"/auth/verify-token\", {\n          validateStatus: function validateStatus() {\n            return true;\n          }\n        }).then(function (response) {\n          if (response.status >= 400) {\n            return dispatch({\n              type: \"AUTH_ERROR\"\n            });\n          }\n          var payload = response.data;\n          dispatch({\n            type: \"AUTH_SUCCESS\",\n            payload: payload\n          });\n        }).catch(function (error) {\n          dispatch({\n            type: \"AUTH_ERROR\"\n          });\n        });\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n      }\n    });\n    return function checkAuth() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var checkUser = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield AsyncStorage.getItem(\"token\");\n      checkAuth();\n    });\n    return function checkUser() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    checkUser();\n  }, []);\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {}), _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"MyTodo\",\n        component: ButtonTab,\n        options: {\n          headerShown: false,\n          headerTintColor: \"white\",\n          headerMode: \"screen\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: Detail,\n        options: {\n          headerShown: true,\n          headerMode: \"screen\"\n        }\n      })]\n    })]\n  });\n};\nexport default Containers;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","StatusBar","MaterialIcons","FontAwesome5","MaterialCommunityIcons","AsyncStorage","UserContext","AddList","Home","Login","Register","List","Categories","Detail","Stack","Tab","ButtonTab","route","headerShown","tabBarLabel","tabBarIcon","focused","bgColor","name","Containers","useContext","state","dispatch","useState","isLoading","setIsLoading","checkAuth","token","getItem","setAuthorization","API","post","validateStatus","then","response","status","type","payload","data","catch","error","checkUser","useEffect","headerTintColor","headerMode"],"sources":["/home/aziz/Desktop/mobile/container.js"],"sourcesContent":["import React from \"react\"\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\nimport { StatusBar } from \"native-base\"\nimport {\n  MaterialIcons,\n  FontAwesome5,\n  MaterialCommunityIcons,\n} from \"@expo/vector-icons\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { UserContext } from \"./src/context/UserContext\"\n\nimport AddList from \"./src/components/screen/AddList\"\nimport Home from \"./src/components/screen/Home\"\nimport Login from \"./src/components/screen/Login\"\nimport Register from \"./src/components/screen/Register\"\nimport List from \"./src/components/screen/List\"\nimport Categories from \"./src/components/screen/Categories\"\nimport Detail from \"./src/components/screen/Detail\"\n\nconst Stack = createStackNavigator()\nconst Tab = createBottomTabNavigator()\n\nconst ButtonTab = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarLabel: () => {\n          return null\n        },\n        tabBarIcon: ({ focused }) => {\n          let bgColor\n          if (route.name == \"List\") {\n            bgColor = focused ? \"#FF5555\" : \"#D9D9D9\"\n            return (\n              <FontAwesome5 name=\"clipboard-list\" size={25} color={bgColor} />\n            )\n          } else if (route.name == \"AddList\") {\n            bgColor = focused ? \"#FF5555\" : \"#D9D9D9\"\n            return (\n              <MaterialCommunityIcons\n                name=\"clipboard-plus\"\n                size={25}\n                color={bgColor}\n              />\n            )\n          } else if (route.name == \"Categories\") {\n            bgColor = focused ? \"#FF5555\" : \"#D9D9D9\"\n            return <MaterialIcons name=\"category\" size={25} color={bgColor} />\n          }\n        },\n      })}\n    >\n      <Stack.Screen name=\"List\" component={List} />\n      <Stack.Screen name=\"AddList\" component={AddList} />\n      <Stack.Screen name=\"Categories\" component={Categories} />\n    </Tab.Navigator>\n  )\n}\n\nconst Containers = () => {\n  const [state, dispatch] = React.useContext(UserContext)\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  const checkAuth = async () => {\n    try {\n      let token = await AsyncStorage.getItem(\"token\")\n\n      if (token) setAuthorization(token)\n      await API.post(\"/auth/verify-token\", {\n        validateStatus: () => true,\n      })\n        .then((response) => {\n          if (response.status >= 400) {\n            return dispatch({\n              type: \"AUTH_ERROR\",\n            })\n          }\n\n          const payload = response.data\n          dispatch({\n            type: \"AUTH_SUCCESS\",\n            payload,\n          })\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"AUTH_ERROR\",\n          })\n        })\n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n    }\n  }\n\n  const checkUser = async () => {\n    await AsyncStorage.getItem(\"token\")\n    checkAuth()\n  }\n\n  React.useEffect(() => {\n    checkUser()\n  }, [])\n  return (\n    <NavigationContainer>\n      <StatusBar />\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Register\"\n          component={Register}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"MyTodo\"\n          component={ButtonTab}\n          options={{\n            headerShown: false,\n            headerTintColor: \"white\",\n            headerMode: \"screen\",\n          }}\n        />\n        <Stack.Screen\n          name=\"Detail\"\n          component={Detail}\n          options={{ headerShown: true, headerMode: \"screen\" }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nexport default Containers\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}