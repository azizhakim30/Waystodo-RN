{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Box, Input, Button, Text, VStack, TextArea, Select } from \"native-base\";\nimport React from \"react\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddList = function AddList() {\n  var _React$useState = React.useState(new Date()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    date = _React$useState2[0],\n    setDate = _React$useState2[1];\n  var _React$useState3 = React.useState(\"date\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    mode = _React$useState4[0],\n    setMode = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    show = _React$useState6[0],\n    setShow = _React$useState6[1];\n  var _React$useState7 = React.useState(\"Choose Date\"),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    text = _React$useState8[0],\n    setText = _React$useState8[1];\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    var tempDate = new Date(currentDate);\n    var formatDate = tempDate.getDate() + \"/\" + (tempDate.getMonth() + 1) + \"/\" + tempDate.getFullYear();\n    setText(formatDate);\n  };\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n  var _React$useState9 = React.useState({\n      name: \"\",\n      category: \"\",\n      date: \"\",\n      description: \"\"\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    form = _React$useState10[0],\n    setForm = _React$useState10[1];\n  var handleOnChange = function handleOnChange(name, value) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, name, value)));\n  };\n  var handleOnSubmit = function handleOnSubmit() {\n    console.log(form);\n  };\n  return _jsxs(Box, {\n    flex: 1,\n    ml: 12,\n    justifyContent: \"center\",\n    children: [_jsx(Text, {\n      fontSize: \"2xl\",\n      bold: true,\n      mb: 5,\n      children: \"Add List\"\n    }), _jsxs(VStack, {\n      width: 300,\n      space: 3,\n      children: [_jsx(Input, {\n        placeholder: \"Name\",\n        width: \"100%\",\n        name: \"name\",\n        type: \"text\",\n        onChangeText: function onChangeText(value) {\n          return handleOnChange(\"name\", value);\n        }\n      }), _jsx(Select, {\n        placeholder: \"Category\",\n        width: \"100%\",\n        name: \"category\",\n        onChangeText: function onChangeText(value) {\n          return handleOnChange(\"category\", value);\n        },\n        children: \"Select Category\"\n      }), _jsx(Pressable, {\n        title: \"DatePicker\",\n        onPress: function onPress() {\n          return showMode(\"date\");\n        },\n        p: 3,\n        h: 47,\n        bg: \"blueGray.200\",\n        borderRadius: 8,\n        borderWidth: 2,\n        borderColor: \"blueGray.400\",\n        mb: \"3\",\n        w: \"100%\",\n        children: _jsxs(HStack, {\n          justifyContent: \"space-between\",\n          children: [_jsx(Text, {\n            fontSize: \"xs\",\n            color: \"blueGray.400\",\n            children: text\n          }), _jsx(Text, {\n            color: \"blueGray.400\",\n            children: _jsx(Ionicons, {\n              name: \"calendar-outline\"\n            })\n          })]\n        })\n      }), _jsx(TextArea, {\n        placeholder: \"Description\",\n        width: \"100%\",\n        name: \"description\",\n        onChangeText: function onChangeText(value) {\n          return handleOnChange(\"description\", value);\n        }\n      })]\n    }), _jsx(Button, {\n      width: 300,\n      backgroundColor: \"#FF5555\",\n      onPress: handleOnSubmit,\n      mt: 10,\n      children: _jsx(Text, {\n        color: \"white\",\n        fontWeight: 800,\n        children: \"Add List\"\n      })\n    })]\n  });\n};\nexport default AddList;","map":{"version":3,"names":["Box","Input","Button","Text","VStack","TextArea","Select","React","DateTimePicker","AddList","useState","Date","date","setDate","mode","setMode","show","setShow","text","setText","onChangeDate","event","selectedDate","currentDate","tempDate","formatDate","getDate","getMonth","getFullYear","showMode","currentMode","name","category","description","form","setForm","handleOnChange","value","handleOnSubmit","console","log"],"sources":["/home/aziz/Desktop/mobile/src/components/screen/AddList.js"],"sourcesContent":["import { Box, Input, Button, Text, VStack, TextArea, Select } from \"native-base\"\nimport React from \"react\"\nimport DateTimePicker from \"@react-native-community/datetimepicker\"\n\nconst AddList = () => {\n  const [date, setDate] = React.useState(new Date())\n  const [mode, setMode] = React.useState(\"date\")\n  const [show, setShow] = React.useState(false)\n  const [text, setText] = React.useState(\"Choose Date\")\n\n  const onChangeDate = (event, selectedDate) => {\n    const currentDate = selectedDate || date\n    setShow(false)\n    setDate(currentDate)\n\n    const tempDate = new Date(currentDate)\n    const formatDate =\n      tempDate.getDate() +\n      \"/\" +\n      (tempDate.getMonth() + 1) +\n      \"/\" +\n      tempDate.getFullYear()\n    setText(formatDate)\n  }\n\n  const showMode = (currentMode) => {\n    setShow(true)\n    setMode(currentMode)\n  }\n\n  const [form, setForm] = React.useState({\n    name: \"\",\n    category: \"\",\n    date: \"\",\n    description: \"\",\n  })\n\n  const handleOnChange = (name, value) => {\n    setForm({\n      ...form,\n      [name]: value,\n    })\n  }\n\n  const handleOnSubmit = () => {\n    console.log(form)\n  }\n  return (\n    <Box flex={1} ml={12} justifyContent=\"center\">\n      <Text fontSize=\"2xl\" bold mb={5}>\n        Add List\n      </Text>\n      <VStack width={300} space={3}>\n        <Input\n          placeholder=\"Name\"\n          width=\"100%\"\n          name=\"name\"\n          type=\"text\"\n          onChangeText={(value) => handleOnChange(\"name\", value)}\n        />\n        <Select\n          placeholder=\"Category\"\n          width=\"100%\"\n          name=\"category\"\n          onChangeText={(value) => handleOnChange(\"category\", value)}\n        >\n          Select Category\n        </Select>\n        <Pressable\n          title=\"DatePicker\"\n          onPress={() => showMode(\"date\")}\n          p={3}\n          h={47}\n          bg=\"blueGray.200\"\n          borderRadius={8}\n          borderWidth={2}\n          borderColor=\"blueGray.400\"\n          mb=\"3\"\n          w=\"100%\"\n        >\n          <HStack justifyContent=\"space-between\">\n            <Text fontSize=\"xs\" color=\"blueGray.400\">\n              {text}\n            </Text>\n            <Text color=\"blueGray.400\">\n              <Ionicons name=\"calendar-outline\" />\n            </Text>\n          </HStack>\n        </Pressable>\n        <TextArea\n          placeholder=\"Description\"\n          width=\"100%\"\n          name=\"description\"\n          onChangeText={(value) => handleOnChange(\"description\", value)}\n        />\n      </VStack>\n      <Button\n        width={300}\n        backgroundColor=\"#FF5555\"\n        onPress={handleOnSubmit}\n        mt={10}\n      >\n        <Text color=\"white\" fontWeight={800}>\n          Add List\n        </Text>\n      </Button>\n    </Box>\n  )\n}\n\nexport default AddList\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}