{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Box, Input, Button, Text, VStack, TextArea, Select, Pressable, HStack, View } from \"native-base\";\nimport React from \"react\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddList = function AddList() {\n  var _React$useState = React.useState(new Date()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    date = _React$useState2[0],\n    setDate = _React$useState2[1];\n  var _React$useState3 = React.useState(\"date\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    mode = _React$useState4[0],\n    setMode = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    show = _React$useState6[0],\n    setShow = _React$useState6[1];\n  var _React$useState7 = React.useState(\"Choose Date\"),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    text = _React$useState8[0],\n    setText = _React$useState8[1];\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    var tempDate = new Date(currentDate);\n    var formatDate = tempDate.getDate() + \"/\" + (tempDate.getMonth() + 1) + \"/\" + tempDate.getFullYear();\n    setText(formatDate);\n  };\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n  var _React$useState9 = React.useState({\n      name: \"\",\n      category: \"\",\n      date: \"\",\n      description: \"\"\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    form = _React$useState10[0],\n    setForm = _React$useState10[1];\n  var handleOnChange = function handleOnChange(name, value) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, name, value)));\n  };\n  var handleOnSubmit = function handleOnSubmit() {\n    console.log(form);\n  };\n  return _jsxs(View, {\n    p: 30,\n    children: [_jsx(Text, {\n      fontSize: \"2xl\",\n      bold: true,\n      ml: 12,\n      mb: 5,\n      children: \"Add List\"\n    }), _jsxs(Box, {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [_jsxs(VStack, {\n        width: 300,\n        space: 3,\n        children: [_jsx(Input, {\n          placeholder: \"Name\",\n          p: 3,\n          h: 47,\n          bg: \"muted.200\",\n          borderRadius: 8,\n          borderWidth: 2,\n          borderColor: \"muted.400\",\n          mb: \"3\",\n          w: \"100%\",\n          name: \"name\",\n          type: \"text\",\n          onChangeText: function onChangeText(value) {\n            return handleOnChange(\"name\", value);\n          }\n        }), _jsx(Select, {\n          placeholder: \"Category\",\n          p: 3,\n          h: 47,\n          bg: \"muted.200\",\n          borderRadius: 8,\n          borderWidth: 2,\n          borderColor: \"muted.400\",\n          mb: \"3\",\n          w: \"100%\",\n          name: \"category\",\n          onChangeText: function onChangeText(value) {\n            return handleOnChange(\"category\", value);\n          },\n          children: \"Select Category\"\n        }), _jsx(Pressable, {\n          title: \"DatePicker\",\n          onPress: function onPress() {\n            return showMode(\"date\");\n          },\n          p: 3,\n          h: 47,\n          bg: \"muted.200\",\n          borderRadius: 8,\n          borderWidth: 2,\n          borderColor: \"muted.400\",\n          mb: \"3\",\n          w: \"100%\",\n          children: _jsxs(HStack, {\n            justifyContent: \"space-between\",\n            children: [_jsx(Text, {\n              fontSize: \"xs\",\n              color: \"blueGray.400\",\n              children: text\n            }), _jsx(Text, {\n              color: \"blueGray.400\",\n              children: _jsx(Ionicons, {\n                name: \"calendar-outline\"\n              })\n            })]\n          })\n        }), _jsx(TextArea, {\n          placeholder: \"Description\",\n          p: 3,\n          bg: \"muted.200\",\n          borderRadius: 8,\n          borderWidth: 2,\n          borderColor: \"muted.400\",\n          mb: \"3\",\n          w: \"100%\",\n          name: \"description\",\n          onChangeText: function onChangeText(value) {\n            return handleOnChange(\"description\", value);\n          }\n        })]\n      }), _jsx(Button, {\n        width: 300,\n        backgroundColor: \"#FF5555\",\n        onPress: handleOnSubmit,\n        mt: 10,\n        children: _jsx(Text, {\n          color: \"white\",\n          fontWeight: 800,\n          children: \"Add List\"\n        })\n      }), show && _jsx(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        value: date,\n        mode: mode,\n        display: \"default\",\n        onChange: onChangeDate\n      })]\n    })]\n  });\n};\nexport default AddList;","map":{"version":3,"names":["Box","Input","Button","Text","VStack","TextArea","Select","Pressable","HStack","View","React","DateTimePicker","Ionicons","AddList","useState","Date","date","setDate","mode","setMode","show","setShow","text","setText","onChangeDate","event","selectedDate","currentDate","tempDate","formatDate","getDate","getMonth","getFullYear","showMode","currentMode","name","category","description","form","setForm","handleOnChange","value","handleOnSubmit","console","log"],"sources":["/home/aziz/Desktop/mobile/src/components/screen/AddList.js"],"sourcesContent":["import {\n  Box,\n  Input,\n  Button,\n  Text,\n  VStack,\n  TextArea,\n  Select,\n  Pressable,\n  HStack,\n  View,\n} from \"native-base\"\nimport React from \"react\"\nimport DateTimePicker from \"@react-native-community/datetimepicker\"\nimport { Ionicons } from \"@expo/vector-icons\"\n\nconst AddList = () => {\n  const [date, setDate] = React.useState(new Date())\n  const [mode, setMode] = React.useState(\"date\")\n  const [show, setShow] = React.useState(false)\n  const [text, setText] = React.useState(\"Choose Date\")\n\n  const onChangeDate = (event, selectedDate) => {\n    const currentDate = selectedDate || date\n    setShow(false)\n    setDate(currentDate)\n\n    const tempDate = new Date(currentDate)\n    const formatDate =\n      tempDate.getDate() +\n      \"/\" +\n      (tempDate.getMonth() + 1) +\n      \"/\" +\n      tempDate.getFullYear()\n    setText(formatDate)\n  }\n\n  const showMode = (currentMode) => {\n    setShow(true)\n    setMode(currentMode)\n  }\n\n  const [form, setForm] = React.useState({\n    name: \"\",\n    category: \"\",\n    date: \"\",\n    description: \"\",\n  })\n\n  const handleOnChange = (name, value) => {\n    setForm({\n      ...form,\n      [name]: value,\n    })\n  }\n\n  const handleOnSubmit = () => {\n    console.log(form)\n  }\n  return (\n    <View p={30}>\n      <Text fontSize=\"2xl\" bold ml={12} mb={5}>\n        Add List\n      </Text>\n      <Box flex={1} justifyContent=\"center\" alignItems=\"center\">\n        <VStack width={300} space={3}>\n          <Input\n            placeholder=\"Name\"\n            p={3}\n            h={47}\n            bg=\"muted.200\"\n            borderRadius={8}\n            borderWidth={2}\n            borderColor=\"muted.400\"\n            mb=\"3\"\n            w=\"100%\"\n            name=\"name\"\n            type=\"text\"\n            onChangeText={(value) => handleOnChange(\"name\", value)}\n          />\n          <Select\n            placeholder=\"Category\"\n            p={3}\n            h={47}\n            bg=\"muted.200\"\n            borderRadius={8}\n            borderWidth={2}\n            borderColor=\"muted.400\"\n            mb=\"3\"\n            w=\"100%\"\n            name=\"category\"\n            onChangeText={(value) => handleOnChange(\"category\", value)}\n          >\n            Select Category\n          </Select>\n          <Pressable\n            title=\"DatePicker\"\n            onPress={() => showMode(\"date\")}\n            p={3}\n            h={47}\n            bg=\"muted.200\"\n            borderRadius={8}\n            borderWidth={2}\n            borderColor=\"muted.400\"\n            mb=\"3\"\n            w=\"100%\"\n          >\n            <HStack justifyContent=\"space-between\">\n              <Text fontSize=\"xs\" color=\"blueGray.400\">\n                {text}\n              </Text>\n              <Text color=\"blueGray.400\">\n                <Ionicons name=\"calendar-outline\" />\n              </Text>\n            </HStack>\n          </Pressable>\n          <TextArea\n            placeholder=\"Description\"\n            p={3}\n            bg=\"muted.200\"\n            borderRadius={8}\n            borderWidth={2}\n            borderColor=\"muted.400\"\n            mb=\"3\"\n            w=\"100%\"\n            name=\"description\"\n            onChangeText={(value) => handleOnChange(\"description\", value)}\n          />\n        </VStack>\n        <Button\n          width={300}\n          backgroundColor=\"#FF5555\"\n          onPress={handleOnSubmit}\n          mt={10}\n        >\n          <Text color=\"white\" fontWeight={800}>\n            Add List\n          </Text>\n        </Button>\n        {show && (\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode={mode}\n            display=\"default\"\n            onChange={onChangeDate}\n          />\n        )}\n      </Box>\n    </View>\n  )\n}\n\nexport default AddList\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}