{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { Box, Button, Image, Text, Stack, HStack, VStack, Badge, FlatList } from \"native-base\";\nimport { showMessage } from \"react-native-flash-message\";\nimport { useQuery } from \"react-query\";\nimport ChecklistImage from \"../../../assets/images/checklist.png\";\nimport { API } from \"../../config/Api\";\nimport moment from \"moment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction Detail(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    listId = _route$params.listId,\n    listBgColor = _route$params.listBgColor,\n    categoryBgColor = _route$params.categoryBgColor,\n    categoryName = _route$params.categoryName;\n  var _useQuery = useQuery(\"listDetailCaches\", _asyncToGenerator(function* () {\n      var listResponse = yield API.get(\"/Todo/\" + listId);\n      return listResponse.data;\n    })),\n    list = _useQuery.data,\n    listRefetch = _useQuery.refetch;\n  var _useQuery2 = useQuery(\"listDetailCaches\", _asyncToGenerator(function* () {\n      var listResponse = yield API.get(\"/Todos\");\n      return listResponse.data;\n    })),\n    lists = _useQuery2.data,\n    listRefetchs = _useQuery2.refetch;\n  function handleUpdateIsDone(_x, _x2, _x3) {\n    return _handleUpdateIsDone.apply(this, arguments);\n  }\n  function _handleUpdateIsDone() {\n    _handleUpdateIsDone = _asyncToGenerator(function* (e, id_todo, current_status) {\n      e.preventDefault();\n      try {\n        yield API.patch(\"/Todo/\" + id_todo, {\n          is_done: current_status == 0 ? 1 : 0\n        });\n        listRefetch();\n        listRefetchs();\n      } catch (err) {\n        showMessage({\n          message: \"Failed to change status todo!\",\n          type: \"danger\"\n        });\n      }\n    });\n    return _handleUpdateIsDone.apply(this, arguments);\n  }\n  return _jsx(Box, {\n    maxH: \"82%\",\n    children: _jsxs(Stack, {\n      m: \"3\",\n      w: \"93%\",\n      rounded: \"sm\",\n      bg: listBgColor,\n      pb: 5,\n      children: [_jsxs(HStack, {\n        justifyContent: \"space-between\",\n        p: \"3\",\n        pb: 0,\n        children: [_jsxs(Box, {\n          justifyContent: \"center\",\n          w: \"50%\",\n          children: [_jsx(Text, {\n            fontSize: \"3xl\",\n            fontWeight: \"bold\",\n            textDecorationLine: (list == null ? void 0 : list.is_done) == 0 ? \"none\" : \"line-through\",\n            children: list == null ? void 0 : list.name\n          }), _jsx(Text, {\n            textDecorationLine: (list == null ? void 0 : list.is_done) == 0 ? \"none\" : \"line-through\",\n            children: moment(list == null ? void 0 : list.date).format(\"dddd, DD MMMM YYYY\")\n          })]\n        }), _jsxs(VStack, {\n          w: \"32\",\n          mt: \"3\",\n          space: \"2\",\n          children: [_jsx(Box, {\n            p: 1,\n            borderRadius: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            bg: categoryBgColor,\n            children: _jsx(Text, {\n              color: \"white\",\n              fontWeight: \"bold\",\n              children: categoryName\n            })\n          }), _jsx(Button, {\n            bg: listBgColor,\n            borderRadius: 100,\n            _hover: {\n              backgroundColor: {\n                listBgColor: listBgColor\n              }\n            },\n            _pressed: {\n              backgroundColor: {\n                listBgColor: listBgColor\n              }\n            },\n            mt: 2,\n            onPress: function onPress(e) {\n              return handleUpdateIsDone(e, list == null ? void 0 : list._id, list == null ? void 0 : list.is_done);\n            },\n            children: list != null && list.is_done ? _jsx(Image, {\n              source: ChecklistImage,\n              w: 50,\n              h: 50,\n              resizeMode: \"contain\",\n              alt: \"ChecklistImage\"\n            }) : _jsx(_Fragment, {\n              children: _jsx(Button, {\n                bg: list != null && list.is_done ? \"white\" : \"muted.200\",\n                borderRadius: 100,\n                _hover: {\n                  backgroundColor: \"muted.300\"\n                },\n                _pressed: {\n                  backgroundColor: \"muted.400\"\n                },\n                w: 50,\n                h: 50,\n                onPress: function onPress(e) {\n                  return handleUpdateIsDone(e, list == null ? void 0 : list._id, list == null ? void 0 : list.is_done);\n                }\n              })\n            })\n          })]\n        })]\n      }), _jsx(FlatList, {\n        showsVerticalScrollIndicator: false,\n        ListHeaderComponent: _jsx(Text, {\n          fontSize: \"xs\",\n          m: \"3\",\n          color: \"gray.600\",\n          textDecorationLine: (list == null ? void 0 : list.is_done) == 0 ? \"none\" : \"line-through\",\n          children: list == null ? void 0 : list.description\n        }),\n        renderItem: function renderItem() {\n          list == null ? void 0 : list.description;\n        }\n      })]\n    })\n  });\n}\nexport default Detail;","map":{"version":3,"names":["FontAwesome","Box","Button","Image","Text","Stack","HStack","VStack","Badge","FlatList","showMessage","useQuery","ChecklistImage","API","moment","Detail","route","navigation","params","listId","listBgColor","categoryBgColor","categoryName","listResponse","get","data","list","listRefetch","refetch","lists","listRefetchs","handleUpdateIsDone","e","id_todo","current_status","preventDefault","patch","is_done","err","message","type","name","date","format","backgroundColor","_id","description"],"sources":["/home/aziz/Desktop/mobile/src/components/screen/Detail.js"],"sourcesContent":["import { FontAwesome } from \"@expo/vector-icons\"\nimport {\n  Box,\n  Button,\n  Image,\n  Text,\n  Stack,\n  HStack,\n  VStack,\n  Badge,\n  FlatList,\n} from \"native-base\"\nimport { showMessage } from \"react-native-flash-message\"\nimport { useQuery } from \"react-query\"\nimport ChecklistImage from \"../../../assets/images/checklist.png\"\nimport { API } from \"../../config/Api\"\nimport moment from \"moment\"\n\nfunction Detail({ route, navigation }) {\n  let { listId, listBgColor, categoryBgColor, categoryName } = route.params\n\n  let { data: list, refetch: listRefetch } = useQuery(\n    \"listDetailCaches\",\n    async () => {\n      let listResponse = await API.get(`/Todo/${listId}`)\n      return listResponse.data\n    }\n  )\n\n  let { data: lists, refetch: listRefetchs } = useQuery(\n    \"listDetailCaches\",\n    async () => {\n      let listResponse = await API.get(`/Todos`)\n      return listResponse.data\n    }\n  )\n\n  async function handleUpdateIsDone(e, id_todo, current_status) {\n    e.preventDefault()\n    try {\n      await API.patch(`/Todo/${id_todo}`, {\n        is_done: current_status == 0 ? 1 : 0,\n      })\n      listRefetch()\n      listRefetchs()\n    } catch (err) {\n      showMessage({\n        message: \"Failed to change status todo!\",\n        type: \"danger\",\n      })\n    }\n  }\n\n  return (\n    <Box maxH={\"82%\"}>\n      <Stack m={\"3\"} w={\"93%\"} rounded=\"sm\" bg={listBgColor} pb={5}>\n        <HStack justifyContent={\"space-between\"} p=\"3\" pb={0}>\n          <Box justifyContent={\"center\"} w={\"50%\"}>\n            <Text\n              fontSize={\"3xl\"}\n              fontWeight=\"bold\"\n              textDecorationLine={list?.is_done == 0 ? \"none\" : \"line-through\"}\n            >\n              {list?.name}\n            </Text>\n\n            <Text\n              textDecorationLine={list?.is_done == 0 ? \"none\" : \"line-through\"}\n            >\n              {moment(list?.date).format(\"dddd, DD MMMM YYYY\")}\n            </Text>\n          </Box>\n          <VStack w=\"32\" mt={\"3\"} space=\"2\">\n            <Box\n              p={1}\n              borderRadius={10}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              bg={categoryBgColor}\n            >\n              <Text color=\"white\" fontWeight=\"bold\">\n                {categoryName}\n              </Text>\n            </Box>\n            <Button\n              bg={listBgColor}\n              borderRadius={100}\n              _hover={{ backgroundColor: { listBgColor } }}\n              _pressed={{ backgroundColor: { listBgColor } }}\n              mt={2}\n              onPress={(e) => handleUpdateIsDone(e, list?._id, list?.is_done)}\n            >\n              {list?.is_done ? (\n                <Image\n                  source={ChecklistImage}\n                  w={50}\n                  h={50}\n                  resizeMode=\"contain\"\n                  alt=\"ChecklistImage\"\n                />\n              ) : (\n                <>\n                  <Button\n                    bg={list?.is_done ? \"white\" : \"muted.200\"}\n                    borderRadius={100}\n                    _hover={{ backgroundColor: \"muted.300\" }}\n                    _pressed={{ backgroundColor: \"muted.400\" }}\n                    w={50}\n                    h={50}\n                    onPress={(e) =>\n                      handleUpdateIsDone(e, list?._id, list?.is_done)\n                    }\n                  ></Button>\n                </>\n              )}\n            </Button>\n          </VStack>\n        </HStack>\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          ListHeaderComponent={\n            <Text\n              fontSize={\"xs\"}\n              m=\"3\"\n              color={\"gray.600\"}\n              textDecorationLine={list?.is_done == 0 ? \"none\" : \"line-through\"}\n            >\n              {list?.description}\n            </Text>\n          }\n          renderItem={() => {\n            list?.description\n          }}\n        />\n      </Stack>\n    </Box>\n  )\n}\n\nexport default Detail\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}